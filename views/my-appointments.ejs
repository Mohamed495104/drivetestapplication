<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
</head>

<body>
    <%- include('layouts/navbar') %>

        <div class="container mt-4">
            <h1>My Booked Appointments</h1>

            <div id="alert-container"></div>

            <% if (appointments.length===0) { %>
                <div class="alert alert-info">
                    <p>You don't have any booked appointments yet.</p>
                    <div class="mt-3">
                        <a href="/G2_Page" class="btn btn-primary me-2">Book G2 Appointment</a>
                        <a href="/G_Page" class="btn btn-success">Book G Appointment</a>
                    </div>
                </div>
                <% } else { %>
                    <div class="row" id="appointments-container">
                        <% appointments.forEach(function(appointment) { %>
                            <div class="col-md-4 mb-4 appointment-card" data-id="<%= appointment._id %>">
                                <div class="card">
                                    <div
                                        class="card-header <%= appointment.testType === 'G2' ? 'bg-primary' : 'bg-success' %> text-white">
                                        <h5>
                                            <%= appointment.testType %> Test
                                        </h5>
                                    </div>
                                    <div class="card-body">
                                        <h6>
                                            <%= new Date(appointment.date).toLocaleDateString('en-US', { timeZone: 'UTC'
                                                , weekday: 'long' , year: 'numeric' , month: 'long' , day: 'numeric' })
                                                %>
                                        </h6>
                                        <p><strong>Time:</strong>
                                            <%= appointment.time %>
                                        </p>

                                        <button class="btn btn-outline-danger" data-id="<%= appointment._id %>"
                                            data-bs-toggle="modal" data-bs-target="#cancelModal">
                                            <i class="bi bi-x-circle"></i> Cancel Appointment
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <% }); %>
                    </div>

                    <div class="mt-3">
                        <h4>Need another appointment?</h4>
                        <div class="mt-2">
                            <a href="/G2_Page" class="btn btn-outline-primary me-2">Book G2 Appointment</a>
                            <a href="/G_Page" class="btn btn-outline-success">Book G Appointment</a>
                        </div>
                    </div>
                    <% } %>
        </div>

        <div class="modal fade" id="cancelModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Cancel Appointment</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to cancel your appointment?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Keep
                            Appointment</button>
                        <button type="button" class="btn btn-danger" id="confirm-cancel">
                            <span class="spinner-border spinner-border-sm d-none" role="status"
                                aria-hidden="true"></span>
                            Cancel Appointment
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <%- include('layouts/footer') %>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const cancelModal = document.getElementById('cancelModal');
                    const confirmButton = document.getElementById('confirm-cancel');
                    const alertContainer = document.getElementById('alert-container');
                    let currentAppointmentId = null;

                    if (cancelModal) {
                        cancelModal.addEventListener('show.bs.modal', function (event) {
                            const button = event.relatedTarget;
                            currentAppointmentId = button.getAttribute('data-id');
                        });
                    }

                    if (confirmButton) {
                        confirmButton.addEventListener('click', function () {
                            if (currentAppointmentId) {
                                // Show loading state
                                const spinner = confirmButton.querySelector('.spinner-border');
                                const originalText = confirmButton.innerHTML;
                                confirmButton.disabled = true;
                                spinner.classList.remove('d-none');

                                // Send cancel request to server
                                fetch('/appointment/cancel', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ appointmentId: currentAppointmentId })
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        // Hide modal
                                        const modal = bootstrap.Modal.getInstance(cancelModal);
                                        modal.hide();

                                        if (data.success) {
                                            // Show success message
                                            showAlert('success', data.message || 'Appointment cancelled successfully');

                                            // Remove the appointment from the UI
                                            const appointmentElement = document.querySelector(`.appointment-card[data-id="${currentAppointmentId}"]`);
                                            if (appointmentElement) {
                                                appointmentElement.remove();
                                            }

                                            // Check if there are no more appointments
                                            const container = document.getElementById('appointments-container');
                                            if (container && container.children.length === 0) {
                                                // Reload to show "no appointments" message
                                                setTimeout(() => {
                                                    window.location.reload();
                                                }, 2000);
                                            }
                                        } else {
                                            // Show error message
                                            showAlert('danger', data.message || 'Failed to cancel appointment');
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        showAlert('danger', 'An error occurred while cancelling your appointment');
                                    })
                                    .finally(() => {
                                        // Reset button state
                                        confirmButton.disabled = false;
                                        spinner.classList.add('d-none');
                                        confirmButton.innerHTML = originalText;
                                    });
                            }
                        });
                    }

                    // Function to show alerts
                    function showAlert(type, message) {
                        const alert = document.createElement('div');
                        alert.className = `alert alert-${type} alert-dismissible fade show`;
                        alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;

                        alertContainer.appendChild(alert);

                        // Auto dismiss after 5 seconds
                        setTimeout(() => {
                            alert.classList.remove('show');
                            setTimeout(() => alert.remove(), 150);
                        }, 5000);
                    }
                });
            </script>
</body>

</html>